typedef {
	f : int, ff : { g : bool, gg : bool }
} a_record
typedef {
	used : bool,
	rec : a_record
} b_record

proc q (val 	bool x
		, ref b_record k
		)
int n; bool y;
a_record z;
z.f := 42;
z.ff := { g = true, gg = false };
end

proc p (ref int i)
i:=6*i + 4; end

proc main ()
int m;
int n;
bool y;
bool x;
a_record a;
b_record b;

	read n;
	q(true, false);
	a.f := n + 2;
	m := n;
	a := { ff = {g = true} };
	#n := -(true - 1);

	while n>1 do
		while m>0 do
			if m>0 then
				n := -(n - 1);
				n := -(n - 1 - (9- 0));
				n := -(n - 1 - 9 - 0);
				n := (n - 1 - 9 - 0);
				m :=(-(-1));
				if m = 0 then p(n); fi
		   else m := (n - m)*(2*4);
		   		m := (n - m)- (2- 4);
		   		m := (n - m)- (2*4);
		   		m := (n - m)+(2+4);
		   	    m := (((((m - 1)))))  ;
		   	    m := (((-(3+2*(m - 1)))))  ;
		   	    x := (not x) !=y;
		   	    x := (not x=y) !=y;
		   	    m := 2*(n/2);
		   	    if 2*(n/2)=n then
		   	    	n:=1;
		   	    fi
fi od od
end
